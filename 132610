#include<stdio.h>
#define daysinweek 7
main()
{
	int choice,type,kind;
	int  num[100],x,y,z,temp;
	int range,i,big,small;
	float usage,kwh;
	int ndays,year,week,days;
	printf("\t<< M E N U >>\n");
	printf("1] Descending Order\n");
	printf("2] Sort Lowest to Highest\n");
	printf("3] Find the Largest and Smallest Number\n");
	printf("4] Electric Usage\n");
	printf("5] Fibonacci Series\n");
	printf("6] Convert into Year,Week,Days\n");
	printf("\n Enter Choice:");
	scanf("%d",&choice);
	switch(choice)
{
case 1:
	printf("\n Input Integer 1:");
	scanf("%d",&x);
	printf("\n Input Integer 2:");
	scanf("%d",&y);
	printf("\n Input Integer 3:");
	scanf("%d",&z);
	if(x>y&&x>z)
	{
			if(x>y&&y>z)
		{
			printf("\nThe order in descending is:\t%d\t%d\t%d",x,y,z);
		}
	   	else{
	    	printf("\nThe order in descending is:\t%d\t%d\t%d",x,z,y);
	        }
	}
	else if(y>x&&y>z)
	{
			if(y>x&&x>z)
		{
			printf("\nThe order in descending is:\t%d\t%d\t%d\t",y,x,z);
		}
		else{
			printf("\nThe order in descending is:\t%d\t%d\t%d",y,z,x);
		 }
	}
	else if(z>x&&z>y)
	{
			if(z>x&&x>y)
				{
			printf("\nThe order in descending is:\t%d\t%d\t%d\t",z,x,y);	
				}
		else{
			printf("\nThe order in descending is:\t%d\t%d\t%d",z,y,x);	
			}
       {
          printf("\n Unable to sort integer!!");
       }
     }
	break;
case 2:
	printf("Enter 10 numbers:\n");
	for(x=0;x<10;x++)
	scanf("%d",&num[x]);
	for(x=0;x<10;x++)
{
	for(y=x+1;y<10;y++)
	{
		if(num[x]>num[y])
		{
			temp=num[y];
			num[y]=num[x];
			num[x]=temp;
		}
	}
}
printf("\n \n the 10 numbers sorted lowest to highest order are:\t");
for(x=0;x<10;x++)
printf("\t%d",num[x]);
break;
case 3:
  printf("\nRange:");
  scanf("%d",&range);
  printf("\n Enter numbers:\n);
  for(i=0;i<range;i++)
      scanf("%d",&num[i]);
  big=num[0];
  for(i=1;i<range;i++)
  {
      if(big<num[i])
           big=num[i];
  }
  printf("Largest number :%d",big);
  small=num[0];
  for(i=1;i<range;i++){
      if(small>num[i])
           small=num[i];
  }
  printf("\nSmallest number: %d",small);
	break;
case 4:	
	printf("\n\t\t<< ELECTRIC BILLING SYSTEM >>\n");
	printf("\n Enter kwh:");
	scanf("%f",&kwh);
 	printf("\t\t\t<< TYPE OF USAGE >>\n\n");
	printf("1] Residential\n");
	printf("2] Commercial\n");
	printf("3] Industrial\n");
	printf("\n Input type:");
	scanf("%d",&type);
	switch(type)
	{
		case 1:
			usage=6.00+(kwh*.052);
			printf("\n Residential usage is Php %.2f",usage);
		break;
		case 2:
			if(kwh>=1000)
			{
				usage=6.00+((kwh-100)*.045);
				printf("\n Commercial usage is Php %.2f",usage);
			}
		    else
	    	{
			usage=6.00+((kwh*.45));
			printf("\n Commercial usage is Php %.2f",usage);
	     	}
			break;
		case 3:
			printf("\t M E N U");
			printf("\n1] Peak hour");
			printf("\n2] Off-Peak hour");
			printf("\n Enter kind:");
			scanf("%d",&kind);
			switch(kind)
			{
			case 1:	
					if(kwh>=1000)
					{
					usage=76.00+((kwh-1000)*.065);
					printf("\n Industrial usage is Php %.2f",usage);
					}
					else{
					usage=6.00+(kwh*.052);
					printf("\n Industrial usage is Php %.2f",usage);
					}
      				break;
			case 2:
					if(kwh>=1000)
					{
					usage=40.00+((kwh-1000)*.028);	
					printf("\n Industrial usage is Php %.2f",usage);
					}
					else
					{
					usage=6.00+(kwh*.052);
						printf("\n Industrial usage is Php %.2f",usage);
					break;
				}
		    }
			default:printf("\n<< Not a valid type >>");
		}
	    	break;
case 5:
	printf("Range:");
	scanf("%d",&range);
			num[0]=0;num[1]=1;
			for(i=2;i<=range;i++)
 	num[i]=num[i-1]+num[i-2];
 	for(i=0;i<range;i++)
		printf("%d",num[i]);
	break;
case 6:
	printf("Enter the number of days:");
	scanf("%d",&ndays);
	year=ndays/365;
	week=(ndays%365)/daysinweek;
	days=(ndays/365)%daysinweek;
	printf("\n Year:%d",year);
	printf("\t Week:%d",week);
	printf("\t Days:%d",days);
	break;
	default:printf("\n\t<< SORRY Out of the List!! >>");
	break;
}
getch();
return 0;
}
    
